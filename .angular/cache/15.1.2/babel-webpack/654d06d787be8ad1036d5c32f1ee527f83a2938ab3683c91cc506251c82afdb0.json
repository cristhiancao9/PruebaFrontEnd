{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SectionComponent = class SectionComponent {\n  consoleLog() {\n    console.log(this.origen);\n    console.log(this.destino);\n  }\n  constructor(http) {\n    this.http = http;\n    this.username = '';\n    this.origen = '';\n    this.destino = '';\n    this.nombre = '';\n    this.resultados = [];\n    this.origen = '';\n    this.destino = '';\n    this.nombre = '';\n  }\n  checkRoute(origin, destination, flights) {\n    console.log('ESTOS SON LOS VUELOS', flights);\n    let res = {\n      status: false,\n      codigo: 0,\n      msg: '',\n      obj: {}\n    };\n    let originExists = false;\n    let destinationExists = false;\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        originExists = true;\n      }\n      if (flight.arrivalStation === destination) {\n        destinationExists = true;\n      }\n    }\n    if (!originExists) {\n      res['msg'] = 'El origen no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica'\n      };\n      return res;\n      /*     console.log('El origen no está registrado en la aerolínea.');\r\n      return false; */\n    }\n\n    if (!destinationExists) {\n      res['msg'] = 'El destino no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica'\n      };\n      return res;\n      /*    console.log('El destino no está registrado en la aerolínea.');\r\n      return false; */\n    }\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin && flight.arrivalStation === destination) {\n        res['status'] = true;\n        res['msg'] = 'Ruta de viaje encontrada: ';\n        res['obj'] = {\n          Origen: origin,\n          Destino: destination,\n          Aerolinea: flight['flightCarrier'],\n          NumeroVuelo: flight['flightNumber'],\n          Precio: flight['price']\n        };\n        return res;\n        /* console.log('Ruta de viaje encontrada: ');\r\n        console.log('Origen: ' + origin);\r\n        console.log('Destino: ' + destination);\r\n        console.log('Aerolínea: ' + flight.flightCarrier);\r\n        console.log('Número de vuelo: ' + flight.flightNumber);\r\n        console.log('Precio: ' + flight.price);\r\n        return true; */\n      }\n    }\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        for (let f of flights[0]) {\n          if (f.departureStation === flight.arrivalStation && f.arrivalStation === destination) {\n            res['status'] = true;\n            res['msg'] = 'Ruta de viaje con escalas encontradas: ';\n            res['obj'] = {\n              Origen: origin,\n              Destino: destination,\n              Aerolinea: f['flightCarrier'],\n              NumeroVuelo: f['flightNumber'],\n              Precio: flight['price'] + f['price']\n            };\n            return res;\n            /*  console.log('Ruta de viaje con escalas encontrada: ');\r\n            console.log('Origen: ' + origin);\r\n            console.log('Destino: ' + destination);\r\n            console.log('Aerolínea: ' + f.flightCarrier);\r\n            console.log('Número de vuelo: ' + f.flightNumber);\r\n            console.log('Precio: ' + (flight.price + f.price));\r\n            return true; */\n          }\n        }\n      }\n    }\n\n    res['msg'] = 'No se ha encontrado una ruta de viaje entre el origen y el destino especificado.';\n    return res;\n  }\n  getData() {\n    if (!this.origen || !this.destino) {\n      alert('INGRESE TODOS LOS CAMPOS');\n      return;\n    }\n    this.http.get(`https://recruiting-api.newshore.es/api/flights/2`).subscribe(data => {\n      this.resultados.push(data);\n      this.data = [data];\n      console.log(this.data);\n      this.respuesta = this.checkRoute(this.origen, this.destino, this.data);\n      console.log(this.respuesta);\n      this.origen = '';\n      this.destino = '';\n    }, error => {\n      console.log('ERROR', error);\n      this.origen = '';\n      this.destino = '';\n    });\n  }\n};\nSectionComponent = __decorate([Component({\n  selector: 'app-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.css']\n})], SectionComponent);\nexport { SectionComponent };","map":{"version":3,"mappings":"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","names":["Component","SectionComponent","consoleLog","console","log","origen","destino","constructor","http","nombre","checkRoute","origin","destination","flights","res","status","codigo","msg","obj","originExists","destinationExists","flight","departureStation","arrivalStation","Origen","Destino","Aerolinea","NumeroVuelo","Precio","f","getData","alert","get","subscribe","data","resultados","push","respuesta","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\Desktop\\PROYECTONEWSHORE\\newShore\\src\\app\\components\\section\\section.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n/* import { FormControl, FormGroup } from '@angular/forms'; */\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.css'],\n})\nexport class SectionComponent {\n  username = '';\n  origen = '';\n  destino = '';\n  nombre = '';\n  data: any;\n  respuesta: any;\n  resultados: any[] = [];\n  consoleLog() {\n    console.log(this.origen);\n    console.log(this.destino);\n  }\n  constructor(private http: HttpClient) {\n    this.origen = '';\n    this.destino = '';\n    this.nombre = '';\n  }\n  checkRoute(origin: string, destination: string, flights: any[]) {\n    console.log('ESTOS SON LOS VUELOS', flights);\n    let res = { status: false, codigo: 0, msg: '', obj: {} };\n    let originExists = false;\n    let destinationExists = false;\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        originExists = true;\n      }\n      if (flight.arrivalStation === destination) {\n        destinationExists = true;\n      }\n    }\n\n    if (!originExists) {\n      res['msg'] = 'El origen no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica',\n      };\n      return res;\n      /*     console.log('El origen no está registrado en la aerolínea.');\n      return false; */\n    }\n\n    if (!destinationExists) {\n      res['msg'] = 'El destino no está registrado en la aerolínea.';\n      res['obj'] = {\n        Origen: origin,\n        Destino: destination,\n        Aerolinea: 'Aerolínea no encontrada',\n        NumeroVuelo: 'No aplica',\n        Precio: 'No aplica',\n      };\n      return res;\n      /*    console.log('El destino no está registrado en la aerolínea.');\n      return false; */\n    }\n\n    for (let flight of flights[0]) {\n      if (\n        flight.departureStation === origin &&\n        flight.arrivalStation === destination\n      ) {\n        res['status'] = true;\n        res['msg'] = 'Ruta de viaje encontrada: ';\n        res['obj'] = {\n          Origen: origin,\n          Destino: destination,\n          Aerolinea: flight['flightCarrier'],\n          NumeroVuelo: flight['flightNumber'],\n          Precio: flight['price'],\n        };\n        return res;\n        /* console.log('Ruta de viaje encontrada: ');\n        console.log('Origen: ' + origin);\n        console.log('Destino: ' + destination);\n        console.log('Aerolínea: ' + flight.flightCarrier);\n        console.log('Número de vuelo: ' + flight.flightNumber);\n        console.log('Precio: ' + flight.price);\n        return true; */\n      }\n    }\n\n    for (let flight of flights[0]) {\n      if (flight.departureStation === origin) {\n        for (let f of flights[0]) {\n          if (\n            f.departureStation === flight.arrivalStation &&\n            f.arrivalStation === destination\n          ) {\n            res['status'] = true;\n            res['msg'] = 'Ruta de viaje con escalas encontradas: ';\n            res['obj'] = {\n              Origen: origin,\n              Destino: destination,\n              Aerolinea: f['flightCarrier'],\n              NumeroVuelo: f['flightNumber'],\n              Precio: flight['price'] + f['price'],\n            };\n            return res;\n            /*  console.log('Ruta de viaje con escalas encontrada: ');\n            console.log('Origen: ' + origin);\n            console.log('Destino: ' + destination);\n            console.log('Aerolínea: ' + f.flightCarrier);\n            console.log('Número de vuelo: ' + f.flightNumber);\n            console.log('Precio: ' + (flight.price + f.price));\n            return true; */\n          }\n        }\n      }\n    }\n\n    res['msg'] =\n      'No se ha encontrado una ruta de viaje entre el origen y el destino especificado.';\n    return res;\n  }\n  getData() {\n    if (!this.origen || !this.destino) {\n      alert('INGRESE TODOS LOS CAMPOS');\n      return;\n    }\n    this.http.get(`https://recruiting-api.newshore.es/api/flights/2`).subscribe(\n      (data) => {\n        this.resultados.push(data);\n        this.data = [data];\n        console.log(this.data);\n        this.respuesta = this.checkRoute(this.origen, this.destino, this.data);\n        console.log(this.respuesta);\n        this.origen = '';\n        this.destino = '';\n      },\n      (error) => {\n        console.log('ERROR', error);\n        this.origen = '';\n        this.destino = '';\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}